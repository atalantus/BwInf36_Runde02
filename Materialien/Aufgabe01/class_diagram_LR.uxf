<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>330</x>
      <y>360</y>
      <w>160</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>Program
--
void Main()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>90</x>
      <y>360</y>
      <w>140</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>Utilities
--
public void FillArray()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>70</x>
      <y>120</y>
      <w>260</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Wall
--
public Row[] Rows
--
private Wall(int height)
public Wall(int height, int bricksPerRow)
public Wall Clone()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>720</x>
      <y>90</y>
      <w>400</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>Row : IComparable&lt;Row&gt;
--
public bool[] Bricks
public int[] PlacedBricks
public int PlacedBricksIndex
public int RowSum
public List&lt;NextPossibleRowSum&gt; NextPossibleRowSums
public int NextBrickToPlace
private List&lt;NextPossibleRowSums&gt; _lastPossibleRowSums
--
private Row()
public Row(int bricksPerRow)
public void PlaceNextBrick()
public void RemoveLastBrick()
public Row Clone()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>700</x>
      <y>750</y>
      <w>460</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
NextPossibleRowSum
--
public int PossibleRowSum
public int UsedBrickIndex
--
public NextPossibleRowSum(int possibleRowSum, int usedBrickIndex)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>30</x>
      <y>550</y>
      <w>600</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>WallBuilder
--
public int WallHeight
public int BricksPerRow
public int WallLength
public int GapCount
public int UsedGapCount
public int FreeGaps
public Stopwatch AlgorithmStopwatch
--
**public void BuildWall(int n)**
**public Wall FillNextGap(int nextGap, Wall curWall, int freeGaps)**
private bool ContainsPossibleRowSum(Row row, NextPossibleRowSum nprs, int nextGapPos)
public void CalculateWallProperties()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>320</x>
      <y>170</y>
      <w>420</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0,n
m2=
hat als Reihen &gt;</panel_attributes>
    <additional_attributes>10.0;20.0;400.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>920</x>
      <y>310</y>
      <w>220</w>
      <h>460</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0,n
m2=
hat als moegliche RowSums &gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;440.0</additional_attributes>
  </element>
</diagram>
